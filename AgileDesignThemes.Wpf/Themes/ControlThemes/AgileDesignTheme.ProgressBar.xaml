<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:assist="clr-namespace:AgileDesignThemes.Wpf.Themes.Assist"
    xmlns:circularProgressBar1="clr-namespace:AgileDesignThemes.Wpf.Converters.CircularProgressBar"
    xmlns:converter="clr-namespace:AgileDesignThemes.Wpf.Converters"
    xmlns:system="clr-namespace:System;assembly=mscorlib">



    <circularProgressBar1:StartPointConverter x:Key="StartPointConverter" />
    <circularProgressBar1:ArcSizeConverter x:Key="ArcSizeConverter" />
    <circularProgressBar1:ArcEndPointConverter x:Key="ArcEndPointConverter" />
    <circularProgressBar1:RotateTransformCentreConverter x:Key="RotateTransformCentreConverter" />
    <circularProgressBar1:NotZeroConverter x:Key="NotZeroConverter" />
    <converter:ProgressBarWaveEllipseConverter x:Key="ProgressBarEllipseConverter" />
    <converter:ProgressBarWaveValueConverter x:Key="ProgressBarValueConverter" />
    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="#00FFFFFF" />
        <GradientStop Offset="0.4" Color="#60FFFFFF" />
        <GradientStop Offset="0.6" Color="#60FFFFFF" />
        <GradientStop Offset="1" Color="#00FFFFFF" />
    </LinearGradientBrush>

    <Style x:Key="CircularProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Background" Value="#f7f7f7" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard
                            x:Key="IsIndeterminateStoryboard"
                            RepeatBehavior="Forever"
                            TargetProperty="Angle"
                            TargetName="RotateTransform">
                            <DoubleAnimation
                                From="0"
                                To="359"
                                Duration="0:0:2" />
                        </Storyboard>
                        <Storyboard x:Key="IsFullyIndeterminateStoryboard">
                            <DoubleAnimationUsingKeyFrames
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="FullyIndeterminateGridScaleTransform"
                                Storyboard.TargetProperty="ScaleX">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="RotateTransform"
                                Storyboard.TargetProperty="Angle"
                                From="00"
                                To="359"
                                Duration="0:0:1.25" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" ClipToBounds="False">
                        <Grid x:Name="FullyIndeterminateGrid">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform" ScaleX="0" />
                            </Grid.RenderTransform>
                        </Grid>
                        <Grid x:Name="PathGrid" Margin="2" />
                        <TextBlock
                            Name="ValueText"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, StringFormat={}{0}%}"
                            Visibility="Collapsed" />
                        <Canvas>
                            <Ellipse
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Stroke="{TemplateBinding Background}"
                                StrokeThickness="3" />
                            <Path
                                x:Name="Path"
                                Canvas.Left="2"
                                Canvas.Top="2"
                                RenderTransformOrigin="0, 0"
                                Stroke="{TemplateBinding Foreground}"
                                StrokeThickness="2">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource StartPointConverter}, Mode=OneWay}">
                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
                                                <ArcSegment.Point>
                                                    <MultiBinding Converter="{StaticResource ArcEndPointConverter}" ConverterParameter="{x:Static circularProgressBar1:ArcEndPointConverter.ParameterMidPoint}">
                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                    </MultiBinding>
                                                </ArcSegment.Point>
                                            </ArcSegment>
                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
                                                <ArcSegment.Point>
                                                    <MultiBinding Converter="{StaticResource ArcEndPointConverter}">
                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                    </MultiBinding>
                                                </ArcSegment.Point>
                                            </ArcSegment>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform x:Name="RotateTransform" CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ProgressAssist.IndicatorValueVisible" Value="True">
                            <Setter TargetName="ValueText" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter TargetName="ValueText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsIndeterminate, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Value, RelativeSource={RelativeSource Self}, Converter={StaticResource NotZeroConverter}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="IsIndeterminateStoryboard" Storyboard="{StaticResource IsIndeterminateStoryboard}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsIndeterminate" Value="True" />
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="Value" Value="0" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="IsFullyIndeterminateStoryboard" Storyboard="{StaticResource IsFullyIndeterminateStoryboard}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProgressBarBaseStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Height" Value="10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="Background" Value="#f5f5f5" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="#19000000" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="assist:ControlAssist.CornerRadius" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminate" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                            </DoubleAnimationUsingKeyFrames>
                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                            </PointAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="TemplateRoot"
                            Background="#f7f7f7"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True"
                            CornerRadius="{Binding Path=(assist:ControlAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid ClipToBounds="True">
                                <Rectangle x:Name="PART_Track" />
                                <Border
                                    x:Name="PART_Indicator"
                                    HorizontalAlignment="Left"
                                    CornerRadius="{Binding Path=(assist:ControlAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid ClipToBounds="True">
                                        <Border
                                            x:Name="Indicator"
                                            Background="{TemplateBinding Foreground}"
                                            CornerRadius="{Binding Path=(assist:ControlAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Rectangle
                                            x:Name="PART_GlowRect"
                                            Width="100"
                                            Margin="-100,0,0,0"
                                            HorizontalAlignment="Left"
                                            Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" />
                                        <Rectangle
                                            x:Name="Animation"
                                            Fill="{TemplateBinding Foreground}"
                                            RadiusX="5"
                                            RadiusY="5"
                                            RenderTransformOrigin="0.5,0.5"
                                            Visibility="Collapsed">
                                            <Rectangle.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                </TransformGroup>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <TextBlock
                            Name="ValueText"
                            Grid.Column="1"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                            Text="{Binding Path=Value, StringFormat={}{0}%, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ProgressAssist.IndicatorValueVisible" Value="True">
                            <Setter TargetName="ValueText" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Height" Value="{x:Static system:Double.NaN}" />
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsIndeterminate}" />
                            </Trigger.EnterActions>
                            <Setter TargetName="ValueText" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_GlowRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WaveProgressBar" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="StoryboardOnLoaded" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Wave" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-400" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid
                            Name="Grid"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                            <Grid.Clip>
                                <EllipseGeometry>
                                    <EllipseGeometry.RadiusY>
                                        <MultiBinding Converter="{StaticResource ProgressBarEllipseConverter}" ConverterParameter="RadiusY">
                                            <Binding ElementName="Grid" Path="Width" />
                                            <Binding ElementName="Grid" Path="Height" />
                                        </MultiBinding>
                                    </EllipseGeometry.RadiusY>
                                    <EllipseGeometry.RadiusX>
                                        <MultiBinding Converter="{StaticResource ProgressBarEllipseConverter}" ConverterParameter="RadiusX">
                                            <Binding ElementName="Grid" Path="Width" />
                                            <Binding ElementName="Grid" Path="Height" />
                                        </MultiBinding>
                                    </EllipseGeometry.RadiusX>
                                    <EllipseGeometry.Center>
                                        <MultiBinding Converter="{StaticResource ProgressBarEllipseConverter}">
                                            <Binding ElementName="Grid" Path="Width" />
                                            <Binding ElementName="Grid" Path="Height" />
                                        </MultiBinding>
                                    </EllipseGeometry.Center>
                                </EllipseGeometry>
                            </Grid.Clip>
                            <Viewbox>
                                <Border
                                    x:Name="PART_Clip"
                                    Width="200"
                                    Height="200"
                                    CornerRadius="100">
                                    <Path
                                        x:Name="PART_Wave"
                                        Width="600"
                                        Height="250"
                                        Margin="0,0,-400,-20"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Fill="{TemplateBinding Foreground}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Fill"
                                        Stroke="{TemplateBinding BorderBrush}"
                                        StrokeThickness="{TemplateBinding BorderThickness}"
                                        UseLayoutRounding="False">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform>
                                                    <TranslateTransform.Y>

                                                        <MultiBinding Converter="{StaticResource ProgressBarValueConverter}">
                                                            <Binding Path="Maximum" RelativeSource="{RelativeSource AncestorType=ProgressBar}" />
                                                            <Binding Path="Value" RelativeSource="{RelativeSource AncestorType=ProgressBar}" />
                                                        </MultiBinding>
                                                    </TranslateTransform.Y>
                                                </TranslateTransform>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,1">
                                                    <PolyBezierSegment Points="0.5,1 0.5,0 1,0" />
                                                    <PolyBezierSegment Points="1.5,0 1.5,1 2,1" />
                                                    <PolyBezierSegment Points="2.5,1 2.5,0 3,0" />
                                                    <PolyLineSegment Points="3,0 3,10, 0,10 0,1" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Border>
                            </Viewbox>
                            <Ellipse
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding Background}"
                                StrokeThickness="{TemplateBinding BorderThickness}" />
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="PART_Wave">
                            <BeginStoryboard Name="BeginStoryboardWave" Storyboard="{StaticResource StoryboardOnLoaded}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded" SourceName="PART_Wave">
                            <StopStoryboard BeginStoryboardName="BeginStoryboardWave" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>