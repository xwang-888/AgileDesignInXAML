<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:assist="clr-namespace:AgileDesignThemes.Wpf.Themes.Assist"
                    xmlns:wpf="clr-namespace:AgileDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:AgileDesignThemes.Wpf.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AgileDesignThemes.Wpf;component/Themes/ControlThemes/AgileDesignTheme.Shadows.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <PathGeometry x:Key="Arrow.Down" Figures="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" />
    <converters:StringIsEmptyConverter x:Key="StringIsEmptyConverter"/>

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StateBorderThicknessStoryboard">
                <ThicknessAnimationUsingKeyFrames   Storyboard.TargetName="BorderThickness"  Storyboard.TargetProperty="Margin" >
                    <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="-2"/>
                </ThicknessAnimationUsingKeyFrames>
                <DoubleAnimation Storyboard.TargetName="BorderThickness"  From="0" By="0.15" Duration="0:0:0.2"  Storyboard.TargetProperty="Opacity" />
            </Storyboard>
            <Storyboard x:Key="ExitBorderThicknessStoryboard">
                <DoubleAnimationUsingKeyFrames   Storyboard.TargetName="BorderThickness"  Storyboard.TargetProperty="Opacity" >
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" 
                        BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                        Opacity="0"
                        x:Name="BorderThickness"
                        CornerRadius="{TemplateBinding assist:ControlAssist.CornerRadius}"
                        BorderThickness="2"/>
            <Border Name="Border" Grid.ColumnSpan="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding ComboBox.BorderThickness}"
                        CornerRadius="{TemplateBinding assist:ControlAssist.CornerRadius}"
                        SnapsToDevicePixels="True" UseLayoutRounding="True" />
            <Border Name="ButtonBorder" Grid.Column="1" Margin="1, 1, 1, 1"
                        Background="Transparent"
                        CornerRadius="{Binding CornerRadius,ElementName=Border}"
                        Padding="5,0,8,0">
                <Path Name="Arrow" Grid.Column="1" Width="10" HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource Arrow.Down}"
                      Fill="#ABADB3"
                      RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stretch="Uniform"
                      UseLayoutRounding="True">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="180" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="BorderThickness" Value="0,0,0,1">
                <Setter TargetName="BorderThickness" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StateBorderThicknessStoryboard}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource ExitBorderThicknessStoryboard}"/>
                </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Panel.Background" Value="#00eeeeee" />
                <Setter TargetName="Border" Property="Border.BorderBrush" Value="#00888888" />
                <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="#00eeeeee" />
                <Setter TargetName="ButtonBorder" Property="Border.BorderBrush" Value="#00888888" />
                <Setter Property="TextElement.Foreground" Value="#888" />
                <Setter TargetName="Arrow" Property="Stroke" Value="#999" />
                <Setter TargetName="Arrow" Property="StrokeThickness" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Open">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Close">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid Width="{TemplateBinding Width}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1">
                <ToggleButton x:Name="ToggleButton" 
                                  ClickMode="Press"
                                  Focusable="False"
                                  assist:ControlAssist.CornerRadius="{TemplateBinding assist:ControlAssist.CornerRadius}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                  Template="{StaticResource ComboBoxToggleButtonTemplate}">
                </ToggleButton>
                <ContentPresenter Name="ContentSite" Margin="{TemplateBinding ComboBox.Padding}"  HorizontalAlignment="Left"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      IsHitTestVisible="False" />
                <TextBlock Margin="{TemplateBinding Padding}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               FontSize="{TemplateBinding FontSize}"
                               Opacity="0.4" IsHitTestVisible="False"
                               Text="{TemplateBinding assist:ControlAssist.HintText}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="assist:ControlAssist.HintText" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding ElementName=ContentSite,Path=Content,Converter={StaticResource StringIsEmptyConverter}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=ContentSite,Path=Content,Converter={StaticResource StringIsEmptyConverter}}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=Text.IsEmpty, ElementName=PART_EditableTextBox}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBox Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}"
                             Padding="0"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center" 
                             Background="Transparent" 
                             Focusable="True" 
                             IsReadOnly="False"
                             Visibility="Hidden" 
                             Text="{TemplateBinding ComboBox.SelectionBoxItem}">
                    <TextBox.Template>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="OuterBorder" Background="Transparent">
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </TextBox.Template>
                </TextBox>
                <Popup Name="Popup"
                           MinWidth="{TemplateBinding ActualWidth}"
                           MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                           AllowsTransparency="True" Focusable="False" HorizontalOffset="-1"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           Placement="Bottom" StaysOpen="False" VerticalOffset="1">
                    <Grid Width="{TemplateBinding ActualWidth}"
                              Name="DropDown"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                              Margin="10 0 10 10" 
                              RenderTransformOrigin=".5,0" 
                              SnapsToDevicePixels="True">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Border Background="{DynamicResource AgileDesignCardBackground}"
                                    CornerRadius="3"
                                    UseLayoutRounding="True"
                                    Effect="{StaticResource EffectShadow3}"
                                    SnapsToDevicePixels="True">
                        </Border>
                        <Border Name="DropDownBorder"
                                    Background="{DynamicResource AgileDesignCardBackground}"
                                    CornerRadius="3"
                                    SnapsToDevicePixels="True" 
                                    UseLayoutRounding="True">
                        </Border>
                        <wpf:ScrollViewer Margin="0 3">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                        </wpf:ScrollViewer>
                    </Grid>

                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="Storyboard_Open_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard_Open_BeginStoryboard" Storyboard="{StaticResource Open}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger SourceName="ToggleButton" Property="IsChecked" Value="False">
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="Storyboard_Close_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard_Close_BeginStoryboard" Storyboard="{StaticResource Close}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="100" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="#888" />
                <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="#888" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
            <Trigger SourceName="PART_EditableTextBox" Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#0c000000" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxBaseStyle" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.FontSize" Value="13" />
        <Setter Property="Background" Value="{DynamicResource  AgileDesignPaper}"/>
        <Setter Property="Foreground" Value="{DynamicResource  AgileDesignBody}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource  AgileDesignTextBoxBorder}"/>
        <Setter Property="Padding" Value="5, 3, 25, 3"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="assist:ControlAssist.CornerRadius" Value="3" />
        <Setter Property="assist:ControlAssist.HintText" Value="{x:Null}" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MaxDropDownHeight" Value="300" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
    </Style>
</ResourceDictionary>