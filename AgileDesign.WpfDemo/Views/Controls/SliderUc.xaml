<UserControl x:Class="AgileDesign.WpfDemo.Views.Controls.SliderUc"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AgileDesign.WpfDemo.Views.Controls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:assist="clr-namespace:AgileDesignThemes.Wpf.Themes.Assist;assembly=AgileDesignThemes.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:BooleanAllConverter x:Key="BooleanAllConverter" />
        <Style x:Key="MaterialDesignRepeatButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="AgileDesignSliderThumb" TargetType="{x:Type Thumb}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="ShowFocusVisualStoryboard">
                    <DoubleAnimation Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut" />
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut" />
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="label" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut" />
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut" />
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="HideFocusVisualStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.15" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut" />
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut" />
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <SineEase EasingMode="EaseInOut" />
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="label" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}" />
                    </ObjectAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid x:Name="thumbGrid" Height="15" Width="14">
                <Ellipse
                x:Name="halo"
                Width="24"
                Height="24"
                Margin="-24"
                Fill="{TemplateBinding Foreground}"
                Opacity="0" />
                <Ellipse
                x:Name="focusedHalo"
                Width="24"
                Height="24"
                Margin="-24"
                Fill="{TemplateBinding Foreground}"
                Opacity="0.15"
                RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                        <ScaleTransform ScaleX="0" ScaleY="0" />
                    </Ellipse.RenderTransform>
                </Ellipse>
                <Canvas>
                    <Grid Effect="{StaticResource EffectShadow1}" x:Name="label" Height="36" IsHitTestVisible="False" RenderTransformOrigin=".5,1" Visibility="Collapsed">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0" ScaleY="0"/>
                                <TranslateTransform  Y="-40" X="-60"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <AdornerDecorator>
                            <AdornerDecorator.CacheMode>
                                <BitmapCache SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </AdornerDecorator.CacheMode>
                            <Grid>
                                <Rectangle Fill="{DynamicResource AgileDesignToolTipBackground}"
                                           Margin=" 0 0 0 5"
                                           RadiusX="3"
                                           RadiusY="3"/>
                                <Polygon VerticalAlignment="Bottom"
                                         HorizontalAlignment="Center"
                                         Points="0,0 4.5,5 9,0"
                                         Fill="{DynamicResource AgileDesignToolTipBackground}"/>
                            </Grid>
                        </AdornerDecorator>
                        <TextBlock Foreground="{DynamicResource AgileDesignPaper}"
                                   Margin="12 0 12 5"
                                   Text="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Slider},Path=Value}"
                                   TextAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Grid>
                </Canvas>
                <AdornerDecorator>
                    <AdornerDecorator.CacheMode>
                        <BitmapCache SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </AdornerDecorator.CacheMode>
                    <Ellipse
                    x:Name="grip"
                    Stroke="{TemplateBinding Foreground}"
                    StrokeThickness="2"
                    Fill="{DynamicResource AgileDesignBackground}"
                    Margin="-1,0" />
                </AdornerDecorator>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Track}}" Value="{x:Static Orientation.Vertical}">
                    <Setter TargetName="thumbGrid" Property="Height" Value="14" />
                    <Setter TargetName="thumbGrid" Property="Width" Value="15" />
                    <Setter TargetName="grip" Property="Margin" Value="0,-1" />
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="halo" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard Storyboard="{StaticResource ShowFocusVisualStoryboard}" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="halo" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                            <BeginStoryboard Storyboard="{StaticResource HideFocusVisualStoryboard}" />
                    </Trigger.ExitActions>
                </Trigger>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource BooleanAllConverter}">
                            <Binding Path="IsFocused" RelativeSource="{RelativeSource FindAncestor, AncestorType=Slider}" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="halo" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="halo" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource BooleanAllConverter}">
                            <Binding Path="IsDragging" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource ShowFocusVisualStoryboard}" />
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource HideFocusVisualStoryboard}" />
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="AgileDesignSliderHorizontal" TargetType="{x:Type Slider}">
            <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True"
            UseLayoutRounding="True">
                <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="5" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="5" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Rectangle Grid.Row="1" Fill="{TemplateBinding Foreground}" Height="5" Opacity="0.38" VerticalAlignment="Center" RadiusX="2" RadiusY="2" />
                    <Border
                    x:Name="activeTrack"
                    Grid.Row="1"
                    Background="{TemplateBinding Foreground}"
                    CornerRadius="3,0,0,3"
                    Height="5"
                    Width="{Binding DecreaseRepeatButton.ActualWidth, ElementName=PART_Track}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center" />
                    <!--  选择范围必须包装在画布上的正确位置更新  -->
                    <Canvas Grid.Row="1" VerticalAlignment="Center" Height="6">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="6" RadiusX="2" RadiusY="2" Visibility="Collapsed" />
                    </Canvas>
                    <Track x:Name="PART_Track" Grid.Row="1" Height="20">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                        </Track.IncreaseRepeatButton>
                        <!--  重要的是Thumb被添加在XAML来确保它是画上的重复按钮  -->
                        <Track.Thumb>
                            <Thumb Template="{StaticResource AgileDesignSliderThumb}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Foreground="{TemplateBinding Foreground}" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsDirectionReversed" Value="True">
                    <Setter TargetName="activeTrack" Property="CornerRadius" Value="0,3,3,0" />
                    <Setter TargetName="activeTrack" Property="HorizontalAlignment" Value="Right" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="AgileDesignSliderVertical" TargetType="{x:Type Slider}">
            <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True"
            UseLayoutRounding="True">
                <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="5"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="5"/>
                    <Rectangle Grid.Column="1" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Opacity="0.38" RadiusX="2" RadiusY="2" Width="5" />
                    <Border
                    x:Name="activeTrack"
                    Grid.Column="1"
                    Background="{TemplateBinding Foreground}"
                    CornerRadius="0,0,3,3"
                    Height="{Binding DecreaseRepeatButton.ActualHeight, ElementName=PART_Track}"
                    Width="6"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom" />
                    <!--  选择范围必须包装在画布上的正确位置更新 -->
                    <Canvas Grid.Column="1" HorizontalAlignment="Center" Width="6">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Width="5" RadiusY="2" RadiusX="2" Visibility="Collapsed" />
                    </Canvas>
                    <Track x:Name="PART_Track" Grid.Column="1" Width="20">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                        </Track.IncreaseRepeatButton>
                        <!--  重要的是Thumb被添加在XAML来确保它是画上的重复按钮 -->
                        <Track.Thumb>
                            <Thumb Template="{StaticResource AgileDesignSliderThumb}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Foreground="{TemplateBinding Foreground}" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsDirectionReversed" Value="True">
                    <Setter TargetName="activeTrack" Property="CornerRadius" Value="3,3,0,0" />
                    <Setter TargetName="activeTrack" Property="VerticalAlignment" Value="Top" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style  TargetType="{x:Type Slider}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="IsMoveToPointEnabled" Value="True" />
            <Setter Property="assist:ControlAssist.ShadowDepth" Value="Depth1" />
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="UseLayoutRounding" Value="False" />
            <Setter Property="Template" Value="{StaticResource AgileDesignSliderHorizontal}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource AgileDesignSliderVertical}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource AgileDesignCheckBoxDisabled}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Slider Value="3" Maximum="100"  AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="0"/>
        <Slider Value="3" Height="200"  Orientation="Vertical" AutoToolTipPrecision="0" AutoToolTipPlacement="BottomRight"/>
    </Grid>
</UserControl>
